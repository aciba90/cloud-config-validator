name: snap

on:
  push:
    tags:
      - '*'
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      snap-file: ${{ steps.build-snap.outputs.snap }}
    steps:
    - uses: actions/checkout@v3
    - uses: snapcore/action-build@v1
      id: build-snap

    - name: Install Snap
      run: |
        sudo snap install --dangerous ${{ steps.build-snap.outputs.snap }}
    # TODO: This should not be needed
    - name: Restart service
      run: |
        sudo snap restart cloud-config-validator.daemon

    # Do some testing with the snap
    - name: Verify socket
      run: file /var/snap/cloud-config-validator/common/unix.socket
    # - name: Setup upterm session
    #  uses: lhotari/action-upterm@v1
    # TODO: This should not be needed
      # - name: Warm up socket
      #   run: |
        #  sudo curl --max-time 10 --unix-socket /var/snap/cloud-config-validator/common/unix.socket -v -XGET http://localhost/ || true
    - run: |
        sudo apt-get install -y tox
    - name: Integration tests
      run: |
        sudo CCV_SOCKET=$CCV_SOCKET tox
      env:
        CCV_SOCKET: /var/snap/cloud-config-validator/common/unix.socket

    # Upload artifact
    - uses: actions/upload-artifact@v3
      with:
        name: cloud-config-validator-local
        path: ${{ steps.build-snap.outputs.snap }}

  # TODO: enable release stanza
  # publish:
  #   if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #   - uses: actions/download-artifact@v3
  #     with:
  #       name: cloud-config-validator-local
  #       path: .
  #   - uses: snapcore/action-publish@v1
  #     env:
  #       SNAPCRAFT_STORE_CREDENTIALS: ${{ secrets.STORE_LOGIN }}
  #     with:
  #       snap: ${{needs.build.outputs.snap-file}}
  #       release: ${{ startsWith(github.ref, 'refs/tags/') && 'candidate' || 'edge'}}
